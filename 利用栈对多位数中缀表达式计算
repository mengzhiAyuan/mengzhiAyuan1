#include<iostream>
#include<string>
#include<stack>
using namespace std;
bool gettop(char a,char b)//优先级判断函数b为运算符栈顶元素，a为新元素
{
    if(a=='*'||a=='/'){
        if(b=='*'||b=='/')
        return false;
        else
            return true;}
    else
        return false;
}
void sum(const string &s){
    stack<char>ss;
    stack<float>cmp;
    for(auto i=0;s[i]!='\0';i++){
        if(s[i]<=9&&s[i]>=0){
            float pv=(s[i]-'0')*1.0;
            while(s[i+1]<=9&&s[i+1]>=0){
            pv=(pv*10+s[i+1]-'0')*1.0;
            i++;
        }
        cmp.push(pv);//不是字符，进入操作数栈
        char ch;
        switch (s[i])
        {
        case '(':
            ss.push(s[i]);
            break;
        case ')':
            ch=ss.top();
            while(ch!='('){
            float x=cmp.top();cmp.pop();
            float y=cmp.top();cmp.pop();
            float tmp;
            if(ch=='+')tmp=x+y;
            else if(ch=='-')tmp=y-x;
            else if(ch=='*')tmp=x*y;
            else
                tmp=y/x;
            cmp.push(tmp);
            ss.pop();
            ch=ss.top();
            }
            ss.pop();
            break;
        default:
            if(ss.empty())
            ss.push(s[i]);
            else{
            char stp=ss.top();
            if(stp=='('||gettop(s[i],stp))
               ss.push(s[i]);
            else{
                while(!gettop(s[i],stp)&&!ss.empty()&&stp!='('){
                    ss.pop();
                float x=cmp.top();cmp.pop();
                float y=cmp.top();cmp.pop();
                float tmp;
                if(stp=='+')tmp=x+y;
                else if(stp=='-')tmp=y-x;
                else if(stp=='*')tmp=x*y;
                else if(stp=='/')
                     tmp=y/x;
                cmp.push(tmp);
                    if(!ss.empty())
                        stp=ss.top();
                ss.push(s[i]);}    
               }
             }
             break;
        }
    }
    while(!ss.empty()){
            char t=ss.top();
            float x=cmp.top();cmp.pop();
            float y=cmp.top();cmp.pop();
            float tmp;
            if(t=='+')tmp=x+y;
            else if(t=='-')tmp=y-x;
            else if(t=='*')tmp=x*y;
            else if(t=='/')
                tmp=y/x;
                cmp.push(tmp);
            ss.pop();
            }
    }
    cout<<s<<"="<<cmp.top()<<endl;
}
int main(){
    string s;
    cin>>s;
    sum(s);
    return 0;
}
